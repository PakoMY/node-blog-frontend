{"remainingRequest":"/Users/pako/work/workspace/node-blog/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pako/work/workspace/node-blog/blog/src/views/Login.vue?vue&type=style&index=0&id=cba050d8&lang=scss&scoped=true&","dependencies":[{"path":"/Users/pako/work/workspace/node-blog/blog/src/views/Login.vue","mtime":1613384291753},{"path":"/Users/pako/work/workspace/node-blog/blog/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pako/work/workspace/node-blog/blog/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/pako/work/workspace/node-blog/blog/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/pako/work/workspace/node-blog/blog/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pako/work/workspace/node-blog/blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pako/work/workspace/node-blog/blog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc2lnbl9ib3ggewogICAgd2lkdGg6IDMwMHB4OwogICAgbWFyZ2luOiAyMDBweCBhdXRvIDA7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAuc2lnblRleHQgewogICAgICAgIGNvbG9yOiAjM0I3OEREOwogICAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgICAgICAmOmhvdmVyewogICAgICAgICAgICBjb2xvcjogIzE3NjBENzsKICAgICAgICB9CiAgICB9Cn0KLnNpZ25CdG4gewogICAgd2lkdGg6IDEwMCU7CiAgICBmb250LXNpemU6IDE4cHg7Cn0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"sign_box\">\n        <div class=\"signIn\" v-if=\"status==1\">\n            <el-form :model=\"loginForm\" :rules=\"loginRules\" ref=\"loginForm\" label-width=\"0px\" key=\"login\">\n                <el-form-item prop=\"username\">\n                    <el-input v-model=\"loginForm.username\" placeholder=\"请输入账号\"></el-input>\n                </el-form-item>\n                <el-form-item prop=\"password\">\n                    <el-input type=\"password\" v-model=\"loginForm.password\" placeholder=\"请输入密码\"></el-input>\n                </el-form-item>\n                <el-form-item>\n                    <el-button class=\"signBtn\" type=\"primary\" @click=\"signIn\">登录</el-button>\n                </el-form-item>\n            </el-form>\n            <span class=\"signText\" @click=\"toSignUp\">注册新账号</span>\n        </div>\n        <div class=\"signUp\" v-else>\n            <el-form :model=\"regForm\" :rules=\"regRules\" ref=\"regForm\" label-width=\"0px\" key=\"register\">\n                <el-form-item prop=\"username\">\n                    <el-input v-model=\"regForm.username\" placeholder=\"请输入账号\"></el-input>\n                </el-form-item>\n                <el-form-item prop=\"password\">\n                    <el-input type=\"password\" v-model=\"regForm.password\" placeholder=\"请输入密码\"></el-input>\n                </el-form-item>\n                <el-form-item prop=\"nickname\">\n                    <el-input v-model=\"regForm.nickname\" placeholder=\"请输入昵称\"></el-input>\n                </el-form-item>\n                <el-form-item>\n                    <el-button class=\"signBtn\" type=\"primary\" @click=\"signUp\">注册</el-button>\n                </el-form-item>\n            </el-form>\n            <span class=\"signText\" @click=\"toSignIn\">返回登录</span>\n        </div>\n        <div v-loading.fullscreen.lock=\"loading\"></div>\n    </div>\n</template>\n\n<script>\n    import Cookie from 'js-cookie'\n    export default {\n        data() {\n            return {\n                loading:false,\n                status:1,\n                loginForm:{\n                    username:'',\n                    password:''\n                },\n                loginRules:{\n                    username:[\n                        { required: true, message: '请输入账号', trigger: 'blur' },\n                    ],\n                    password:[\n                        { required: true, message: '请输入密码', trigger: 'blur' },\n                    ]\n                },\n                regForm:{\n                    username:'',\n                    password:'',\n                    nickname:''\n                },\n                regRules:{\n                    username:[\n                        { required: true, message: '请输入账号', trigger: 'blur' },\n                    ],\n                    password: [\n                        { required: true, message: '请输入密码', trigger: 'blur' },\n                    ],\n                    nickname: [\n                        { required: true, message: '请输入昵称', trigger: 'blur' },\n                    ],\n                }\n            }\n        },\n        methods:{\n            signIn() {\n                this.$refs['loginForm'].validate((valid) => {\n                    if (valid) {\n                        this.loading = true\n                        this.$axios.post('/api/user/login',this.loginForm)\n                            .then(res => {\n                                let result = res.data\n                                if(result.code === 0) {\n                                    Cookie.set('token',result.token)\n                                    this.$store.commit('setToken',result.token)\n                                    this.$store.commit('changIsSignIn',1)\n                                    setTimeout(() => {\n                                        this.loading = false\n                                        this.$router.push({name:'home'}) \n                                    }, 1500);\n                                }\n                            })\n                    } else {\n                        console.log('error submit!!');\n                        return false;\n                    }\n                });\n            },\n            signUp() {\n                this.$refs['regForm'].validate((valid) => {\n                    if (valid) {\n                        this.$axios.post('/api/user/register',this.regForm)\n                            .then(res => {\n                                console.log(res)\n                            })\n                    } else {\n                        console.log('error submit!!');\n                        return false;\n                    }\n                });\n            },\n            toSignUp(){\n                this.status = 2\n            },\n            toSignIn() {\n                this.status = 1\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n.sign_box {\n    width: 300px;\n    margin: 200px auto 0;\n    text-align: center;\n    .signText {\n        color: #3B78DD;\n        cursor: pointer;\n        &:hover{\n            color: #1760D7;\n        }\n    }\n}\n.signBtn {\n    width: 100%;\n    font-size: 18px;\n}\n</style>"]}]}